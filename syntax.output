Terminals unused in grammar

   MC_TRUE
   MC_FALSE
   ACC_OUV
   ACC_FER
   PERCENT
   DOLAR
   DIAZ
   AND_COM
   point
   apos
   dbl_apos
   FORMAT_AMP
   FORMAT_HASH
   FORMAT_DOLLAR
   FORMAT_PERCENT
   UMINUS


State 44 conflicts: 1 reduce/reduce


Grammar

    0 $accept: S $end

    1 S: IDF MC_DATA list_dec MC_END MC_CODE list_code MC_END MC_END

    2 list_dec: dec_var list_dec
    3         | dec_cst list_dec
    4         | dec_vec list_dec
    5         | /* empty */

    6 type: MC_INT
    7     | MC_CHAR
    8     | MC_STR
    9     | MC_FLOAT

   10 dec_var: type DEPOINT list_var PVG

   11 list_var: IDF
   12         | IDF BAR list_var

   13 dec_cst: MC_CST DEPOINT IDF AFF idf_cst PVG

   14 idf_cst: INT_CST
   15        | FLOAT_CST
   16        | CHAR_CST
   17        | STRING_CST

   18 $@1: /* empty */

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT type CRO_FER PVG

   20 expression: expression_arth
   21           | expression_log

   22 expression_log: expression_comp
   23               | expression_log MC_AND expression_comp
   24               | expression_log MC_OR expression_comp
   25               | MC_NOT PAR_OUV expression_log PAR_FER

   26 expression_comp: expression_arth
   27                | expression_arth MC_G expression_arth
   28                | expression_arth MC_L expression_arth
   29                | expression_arth MC_GE expression_arth
   30                | expression_arth MC_LE expression_arth
   31                | expression_arth MC_EQ expression_arth
   32                | expression_arth MC_DI expression_arth

   33 expression_arth: IDF
   34                | INT_CST
   35                | FLOAT_CST
   36                | CHAR_CST
   37                | STRING_CST
   38                | expression_arth PLUS expression_arth
   39                | expression_arth MOIN expression_arth
   40                | expression_arth MULT expression_arth
   41                | expression_arth DIV expression_arth
   42                | PAR_OUV expression_arth PAR_FER

   43 $@2: /* empty */

   44 inst_aff: IDF AFF expression_arth $@2 PVG

   45 $@3: /* empty */

   46 inst_read: MC_READ PAR_OUV STRING_CST DEPOINT AROB IDF $@3 PAR_FER PVG

   47 $@4: /* empty */

   48 inst_display: MC_DISPLAY PAR_OUV STRING_CST DEPOINT IDF $@4 PAR_FER PVG

   49 $@5: /* empty */

   50 inst_if: debut_if list_code MC_ELSE DEPOINT $@5 list_code MC_END
   51        | debut_if list_code MC_END

   52 debut_if: MC_IF PAR_OUV expression_log PAR_FER DEPOINT

   53 debut_for: MC_FOR PAR_OUV IDF DEPOINT INT_CST DEPOINT INT_CST PAR_FER

   54 inst_for: debut_for list_code MC_END

   55 list_code: code_items

   56 code_items: code_item code_items
   57           | /* empty */

   58 code_item: inst_aff
   59          | inst_read
   60          | inst_display
   61          | inst_if
   62          | inst_for
   63          | inst_expr

   64 inst_expr: expression PVG


Terminals, with rules where they appear

$end (0) 0
error (256)
MC_DATA (258) 1
MC_END (259) 1 50 51 54
MC_CODE (260) 1
MC_VECTOR (261) 19
MC_INT (262) 6
MC_CHAR (263) 7
MC_STR (264) 8
MC_FLOAT (265) 9
MC_CST (266) 13
MC_READ (267) 46
MC_DISPLAY (268) 48
MC_AND (269) 23
MC_OR (270) 24
MC_NOT (271) 25
MC_G (272) 27
MC_L (273) 28
MC_GE (274) 29
MC_LE (275) 30
MC_EQ (276) 31
MC_DI (277) 32
MC_IF (278) 52
MC_ELSE (279) 50
MC_FOR (280) 53
MC_TRUE (281)
MC_FALSE (282)
VRG (283) 19
AFF (284) 13 44
PLUS (285) 38
MOIN (286) 39
MULT (287) 40
DIV (288) 41
PVG (289) 10 13 19 44 46 48 64
DEPOINT (290) 10 13 19 46 48 50 52 53
PAR_OUV (291) 25 42 46 48 52 53
PAR_FER (292) 25 42 46 48 52 53
CRO_OUV (293) 19
CRO_FER (294) 19
ACC_OUV (295)
ACC_FER (296)
PERCENT (297)
DOLAR (298)
DIAZ (299)
AND_COM (300)
AROB (301) 46
point (302)
apos (303)
dbl_apos (304)
INT_CST (305) 14 19 34 53
FLOAT_CST (306) 15 35
CHAR_CST (307) 16 36
STRING_CST (308) 17 37 46 48
IDF (309) 1 11 12 13 19 33 44 46 48 53
BAR (310) 12
FORMAT_AMP (311)
FORMAT_HASH (312)
FORMAT_DOLLAR (313)
FORMAT_PERCENT (314)
UMINUS (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
S (62)
    on left: 1, on right: 0
list_dec (63)
    on left: 2 3 4 5, on right: 1 2 3 4
type (64)
    on left: 6 7 8 9, on right: 10 19
dec_var (65)
    on left: 10, on right: 2
list_var (66)
    on left: 11 12, on right: 10 12
dec_cst (67)
    on left: 13, on right: 3
idf_cst (68)
    on left: 14 15 16 17, on right: 13
dec_vec (69)
    on left: 19, on right: 4
$@1 (70)
    on left: 18, on right: 19
expression (71)
    on left: 20 21, on right: 64
expression_log (72)
    on left: 22 23 24 25, on right: 21 23 24 25 52
expression_comp (73)
    on left: 26 27 28 29 30 31 32, on right: 22 23 24
expression_arth (74)
    on left: 33 34 35 36 37 38 39 40 41 42, on right: 20 26 27 28 29
    30 31 32 38 39 40 41 42 44
inst_aff (75)
    on left: 44, on right: 58
$@2 (76)
    on left: 43, on right: 44
inst_read (77)
    on left: 46, on right: 59
$@3 (78)
    on left: 45, on right: 46
inst_display (79)
    on left: 48, on right: 60
$@4 (80)
    on left: 47, on right: 48
inst_if (81)
    on left: 50 51, on right: 61
$@5 (82)
    on left: 49, on right: 50
debut_if (83)
    on left: 52, on right: 50 51
debut_for (84)
    on left: 53, on right: 54
inst_for (85)
    on left: 54, on right: 62
list_code (86)
    on left: 55, on right: 1 50 51 54
code_items (87)
    on left: 56 57, on right: 55 56
code_item (88)
    on left: 58 59 60 61 62 63, on right: 56
inst_expr (89)
    on left: 64, on right: 63


state 0

    0 $accept: . S $end

    IDF  shift, and go to state 1

    S  go to state 2


state 1

    1 S: IDF . MC_DATA list_dec MC_END MC_CODE list_code MC_END MC_END

    MC_DATA  shift, and go to state 3


state 2

    0 $accept: S . $end

    $end  shift, and go to state 4


state 3

    1 S: IDF MC_DATA . list_dec MC_END MC_CODE list_code MC_END MC_END

    MC_VECTOR  shift, and go to state 5
    MC_INT     shift, and go to state 6
    MC_CHAR    shift, and go to state 7
    MC_STR     shift, and go to state 8
    MC_FLOAT   shift, and go to state 9
    MC_CST     shift, and go to state 10

    $default  reduce using rule 5 (list_dec)

    list_dec  go to state 11
    type      go to state 12
    dec_var   go to state 13
    dec_cst   go to state 14
    dec_vec   go to state 15


state 4

    0 $accept: S $end .

    $default  accept


state 5

   19 dec_vec: MC_VECTOR . DEPOINT IDF $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT type CRO_FER PVG

    DEPOINT  shift, and go to state 16


state 6

    6 type: MC_INT .

    $default  reduce using rule 6 (type)


state 7

    7 type: MC_CHAR .

    $default  reduce using rule 7 (type)


state 8

    8 type: MC_STR .

    $default  reduce using rule 8 (type)


state 9

    9 type: MC_FLOAT .

    $default  reduce using rule 9 (type)


state 10

   13 dec_cst: MC_CST . DEPOINT IDF AFF idf_cst PVG

    DEPOINT  shift, and go to state 17


state 11

    1 S: IDF MC_DATA list_dec . MC_END MC_CODE list_code MC_END MC_END

    MC_END  shift, and go to state 18


state 12

   10 dec_var: type . DEPOINT list_var PVG

    DEPOINT  shift, and go to state 19


state 13

    2 list_dec: dec_var . list_dec

    MC_VECTOR  shift, and go to state 5
    MC_INT     shift, and go to state 6
    MC_CHAR    shift, and go to state 7
    MC_STR     shift, and go to state 8
    MC_FLOAT   shift, and go to state 9
    MC_CST     shift, and go to state 10

    $default  reduce using rule 5 (list_dec)

    list_dec  go to state 20
    type      go to state 12
    dec_var   go to state 13
    dec_cst   go to state 14
    dec_vec   go to state 15


state 14

    3 list_dec: dec_cst . list_dec

    MC_VECTOR  shift, and go to state 5
    MC_INT     shift, and go to state 6
    MC_CHAR    shift, and go to state 7
    MC_STR     shift, and go to state 8
    MC_FLOAT   shift, and go to state 9
    MC_CST     shift, and go to state 10

    $default  reduce using rule 5 (list_dec)

    list_dec  go to state 21
    type      go to state 12
    dec_var   go to state 13
    dec_cst   go to state 14
    dec_vec   go to state 15


state 15

    4 list_dec: dec_vec . list_dec

    MC_VECTOR  shift, and go to state 5
    MC_INT     shift, and go to state 6
    MC_CHAR    shift, and go to state 7
    MC_STR     shift, and go to state 8
    MC_FLOAT   shift, and go to state 9
    MC_CST     shift, and go to state 10

    $default  reduce using rule 5 (list_dec)

    list_dec  go to state 22
    type      go to state 12
    dec_var   go to state 13
    dec_cst   go to state 14
    dec_vec   go to state 15


state 16

   19 dec_vec: MC_VECTOR DEPOINT . IDF $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT type CRO_FER PVG

    IDF  shift, and go to state 23


state 17

   13 dec_cst: MC_CST DEPOINT . IDF AFF idf_cst PVG

    IDF  shift, and go to state 24


state 18

    1 S: IDF MC_DATA list_dec MC_END . MC_CODE list_code MC_END MC_END

    MC_CODE  shift, and go to state 25


state 19

   10 dec_var: type DEPOINT . list_var PVG

    IDF  shift, and go to state 26

    list_var  go to state 27


state 20

    2 list_dec: dec_var list_dec .

    $default  reduce using rule 2 (list_dec)


state 21

    3 list_dec: dec_cst list_dec .

    $default  reduce using rule 3 (list_dec)


state 22

    4 list_dec: dec_vec list_dec .

    $default  reduce using rule 4 (list_dec)


state 23

   19 dec_vec: MC_VECTOR DEPOINT IDF . $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT type CRO_FER PVG

    $default  reduce using rule 18 ($@1)

    $@1  go to state 28


state 24

   13 dec_cst: MC_CST DEPOINT IDF . AFF idf_cst PVG

    AFF  shift, and go to state 29


state 25

    1 S: IDF MC_DATA list_dec MC_END MC_CODE . list_code MC_END MC_END

    MC_READ     shift, and go to state 30
    MC_DISPLAY  shift, and go to state 31
    MC_NOT      shift, and go to state 32
    MC_IF       shift, and go to state 33
    MC_FOR      shift, and go to state 34
    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 40

    $default  reduce using rule 57 (code_items)

    expression       go to state 41
    expression_log   go to state 42
    expression_comp  go to state 43
    expression_arth  go to state 44
    inst_aff         go to state 45
    inst_read        go to state 46
    inst_display     go to state 47
    inst_if          go to state 48
    debut_if         go to state 49
    debut_for        go to state 50
    inst_for         go to state 51
    list_code        go to state 52
    code_items       go to state 53
    code_item        go to state 54
    inst_expr        go to state 55


state 26

   11 list_var: IDF .
   12         | IDF . BAR list_var

    BAR  shift, and go to state 56

    $default  reduce using rule 11 (list_var)


state 27

   10 dec_var: type DEPOINT list_var . PVG

    PVG  shift, and go to state 57


state 28

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 . CRO_OUV INT_CST VRG INT_CST DEPOINT type CRO_FER PVG

    CRO_OUV  shift, and go to state 58


state 29

   13 dec_cst: MC_CST DEPOINT IDF AFF . idf_cst PVG

    INT_CST     shift, and go to state 59
    FLOAT_CST   shift, and go to state 60
    CHAR_CST    shift, and go to state 61
    STRING_CST  shift, and go to state 62

    idf_cst  go to state 63


state 30

   46 inst_read: MC_READ . PAR_OUV STRING_CST DEPOINT AROB IDF $@3 PAR_FER PVG

    PAR_OUV  shift, and go to state 64


state 31

   48 inst_display: MC_DISPLAY . PAR_OUV STRING_CST DEPOINT IDF $@4 PAR_FER PVG

    PAR_OUV  shift, and go to state 65


state 32

   25 expression_log: MC_NOT . PAR_OUV expression_log PAR_FER

    PAR_OUV  shift, and go to state 66


state 33

   52 debut_if: MC_IF . PAR_OUV expression_log PAR_FER DEPOINT

    PAR_OUV  shift, and go to state 67


state 34

   53 debut_for: MC_FOR . PAR_OUV IDF DEPOINT INT_CST DEPOINT INT_CST PAR_FER

    PAR_OUV  shift, and go to state 68


state 35

   42 expression_arth: PAR_OUV . expression_arth PAR_FER

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 70


state 36

   34 expression_arth: INT_CST .

    $default  reduce using rule 34 (expression_arth)


state 37

   35 expression_arth: FLOAT_CST .

    $default  reduce using rule 35 (expression_arth)


state 38

   36 expression_arth: CHAR_CST .

    $default  reduce using rule 36 (expression_arth)


state 39

   37 expression_arth: STRING_CST .

    $default  reduce using rule 37 (expression_arth)


state 40

   33 expression_arth: IDF .
   44 inst_aff: IDF . AFF expression_arth $@2 PVG

    AFF  shift, and go to state 71

    $default  reduce using rule 33 (expression_arth)


state 41

   64 inst_expr: expression . PVG

    PVG  shift, and go to state 72


state 42

   21 expression: expression_log .
   23 expression_log: expression_log . MC_AND expression_comp
   24               | expression_log . MC_OR expression_comp

    MC_AND  shift, and go to state 73
    MC_OR   shift, and go to state 74

    $default  reduce using rule 21 (expression)


state 43

   22 expression_log: expression_comp .

    $default  reduce using rule 22 (expression_log)


state 44

   20 expression: expression_arth .
   26 expression_comp: expression_arth .
   27                | expression_arth . MC_G expression_arth
   28                | expression_arth . MC_L expression_arth
   29                | expression_arth . MC_GE expression_arth
   30                | expression_arth . MC_LE expression_arth
   31                | expression_arth . MC_EQ expression_arth
   32                | expression_arth . MC_DI expression_arth
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    MC_G   shift, and go to state 75
    MC_L   shift, and go to state 76
    MC_GE  shift, and go to state 77
    MC_LE  shift, and go to state 78
    MC_EQ  shift, and go to state 79
    MC_DI  shift, and go to state 80
    PLUS   shift, and go to state 81
    MOIN   shift, and go to state 82
    MULT   shift, and go to state 83
    DIV    shift, and go to state 84

    PVG       reduce using rule 20 (expression)
    PVG       [reduce using rule 26 (expression_comp)]
    $default  reduce using rule 26 (expression_comp)


state 45

   58 code_item: inst_aff .

    $default  reduce using rule 58 (code_item)


state 46

   59 code_item: inst_read .

    $default  reduce using rule 59 (code_item)


state 47

   60 code_item: inst_display .

    $default  reduce using rule 60 (code_item)


state 48

   61 code_item: inst_if .

    $default  reduce using rule 61 (code_item)


state 49

   50 inst_if: debut_if . list_code MC_ELSE DEPOINT $@5 list_code MC_END
   51        | debut_if . list_code MC_END

    MC_READ     shift, and go to state 30
    MC_DISPLAY  shift, and go to state 31
    MC_NOT      shift, and go to state 32
    MC_IF       shift, and go to state 33
    MC_FOR      shift, and go to state 34
    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 40

    $default  reduce using rule 57 (code_items)

    expression       go to state 41
    expression_log   go to state 42
    expression_comp  go to state 43
    expression_arth  go to state 44
    inst_aff         go to state 45
    inst_read        go to state 46
    inst_display     go to state 47
    inst_if          go to state 48
    debut_if         go to state 49
    debut_for        go to state 50
    inst_for         go to state 51
    list_code        go to state 85
    code_items       go to state 53
    code_item        go to state 54
    inst_expr        go to state 55


state 50

   54 inst_for: debut_for . list_code MC_END

    MC_READ     shift, and go to state 30
    MC_DISPLAY  shift, and go to state 31
    MC_NOT      shift, and go to state 32
    MC_IF       shift, and go to state 33
    MC_FOR      shift, and go to state 34
    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 40

    $default  reduce using rule 57 (code_items)

    expression       go to state 41
    expression_log   go to state 42
    expression_comp  go to state 43
    expression_arth  go to state 44
    inst_aff         go to state 45
    inst_read        go to state 46
    inst_display     go to state 47
    inst_if          go to state 48
    debut_if         go to state 49
    debut_for        go to state 50
    inst_for         go to state 51
    list_code        go to state 86
    code_items       go to state 53
    code_item        go to state 54
    inst_expr        go to state 55


state 51

   62 code_item: inst_for .

    $default  reduce using rule 62 (code_item)


state 52

    1 S: IDF MC_DATA list_dec MC_END MC_CODE list_code . MC_END MC_END

    MC_END  shift, and go to state 87


state 53

   55 list_code: code_items .

    $default  reduce using rule 55 (list_code)


state 54

   56 code_items: code_item . code_items

    MC_READ     shift, and go to state 30
    MC_DISPLAY  shift, and go to state 31
    MC_NOT      shift, and go to state 32
    MC_IF       shift, and go to state 33
    MC_FOR      shift, and go to state 34
    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 40

    $default  reduce using rule 57 (code_items)

    expression       go to state 41
    expression_log   go to state 42
    expression_comp  go to state 43
    expression_arth  go to state 44
    inst_aff         go to state 45
    inst_read        go to state 46
    inst_display     go to state 47
    inst_if          go to state 48
    debut_if         go to state 49
    debut_for        go to state 50
    inst_for         go to state 51
    code_items       go to state 88
    code_item        go to state 54
    inst_expr        go to state 55


state 55

   63 code_item: inst_expr .

    $default  reduce using rule 63 (code_item)


state 56

   12 list_var: IDF BAR . list_var

    IDF  shift, and go to state 26

    list_var  go to state 89


state 57

   10 dec_var: type DEPOINT list_var PVG .

    $default  reduce using rule 10 (dec_var)


state 58

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV . INT_CST VRG INT_CST DEPOINT type CRO_FER PVG

    INT_CST  shift, and go to state 90


state 59

   14 idf_cst: INT_CST .

    $default  reduce using rule 14 (idf_cst)


state 60

   15 idf_cst: FLOAT_CST .

    $default  reduce using rule 15 (idf_cst)


state 61

   16 idf_cst: CHAR_CST .

    $default  reduce using rule 16 (idf_cst)


state 62

   17 idf_cst: STRING_CST .

    $default  reduce using rule 17 (idf_cst)


state 63

   13 dec_cst: MC_CST DEPOINT IDF AFF idf_cst . PVG

    PVG  shift, and go to state 91


state 64

   46 inst_read: MC_READ PAR_OUV . STRING_CST DEPOINT AROB IDF $@3 PAR_FER PVG

    STRING_CST  shift, and go to state 92


state 65

   48 inst_display: MC_DISPLAY PAR_OUV . STRING_CST DEPOINT IDF $@4 PAR_FER PVG

    STRING_CST  shift, and go to state 93


state 66

   25 expression_log: MC_NOT PAR_OUV . expression_log PAR_FER

    MC_NOT      shift, and go to state 32
    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_log   go to state 94
    expression_comp  go to state 43
    expression_arth  go to state 95


state 67

   52 debut_if: MC_IF PAR_OUV . expression_log PAR_FER DEPOINT

    MC_NOT      shift, and go to state 32
    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_log   go to state 96
    expression_comp  go to state 43
    expression_arth  go to state 95


state 68

   53 debut_for: MC_FOR PAR_OUV . IDF DEPOINT INT_CST DEPOINT INT_CST PAR_FER

    IDF  shift, and go to state 97


state 69

   33 expression_arth: IDF .

    $default  reduce using rule 33 (expression_arth)


state 70

   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth
   42                | PAR_OUV expression_arth . PAR_FER

    PLUS     shift, and go to state 81
    MOIN     shift, and go to state 82
    MULT     shift, and go to state 83
    DIV      shift, and go to state 84
    PAR_FER  shift, and go to state 98


state 71

   44 inst_aff: IDF AFF . expression_arth $@2 PVG

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 99


state 72

   64 inst_expr: expression PVG .

    $default  reduce using rule 64 (inst_expr)


state 73

   23 expression_log: expression_log MC_AND . expression_comp

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_comp  go to state 100
    expression_arth  go to state 95


state 74

   24 expression_log: expression_log MC_OR . expression_comp

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_comp  go to state 101
    expression_arth  go to state 95


state 75

   27 expression_comp: expression_arth MC_G . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 102


state 76

   28 expression_comp: expression_arth MC_L . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 103


state 77

   29 expression_comp: expression_arth MC_GE . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 104


state 78

   30 expression_comp: expression_arth MC_LE . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 105


state 79

   31 expression_comp: expression_arth MC_EQ . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 106


state 80

   32 expression_comp: expression_arth MC_DI . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 107


state 81

   38 expression_arth: expression_arth PLUS . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 108


state 82

   39 expression_arth: expression_arth MOIN . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 109


state 83

   40 expression_arth: expression_arth MULT . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 110


state 84

   41 expression_arth: expression_arth DIV . expression_arth

    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 69

    expression_arth  go to state 111


state 85

   50 inst_if: debut_if list_code . MC_ELSE DEPOINT $@5 list_code MC_END
   51        | debut_if list_code . MC_END

    MC_END   shift, and go to state 112
    MC_ELSE  shift, and go to state 113


state 86

   54 inst_for: debut_for list_code . MC_END

    MC_END  shift, and go to state 114


state 87

    1 S: IDF MC_DATA list_dec MC_END MC_CODE list_code MC_END . MC_END

    MC_END  shift, and go to state 115


state 88

   56 code_items: code_item code_items .

    $default  reduce using rule 56 (code_items)


state 89

   12 list_var: IDF BAR list_var .

    $default  reduce using rule 12 (list_var)


state 90

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST . VRG INT_CST DEPOINT type CRO_FER PVG

    VRG  shift, and go to state 116


state 91

   13 dec_cst: MC_CST DEPOINT IDF AFF idf_cst PVG .

    $default  reduce using rule 13 (dec_cst)


state 92

   46 inst_read: MC_READ PAR_OUV STRING_CST . DEPOINT AROB IDF $@3 PAR_FER PVG

    DEPOINT  shift, and go to state 117


state 93

   48 inst_display: MC_DISPLAY PAR_OUV STRING_CST . DEPOINT IDF $@4 PAR_FER PVG

    DEPOINT  shift, and go to state 118


state 94

   23 expression_log: expression_log . MC_AND expression_comp
   24               | expression_log . MC_OR expression_comp
   25               | MC_NOT PAR_OUV expression_log . PAR_FER

    MC_AND   shift, and go to state 73
    MC_OR    shift, and go to state 74
    PAR_FER  shift, and go to state 119


state 95

   26 expression_comp: expression_arth .
   27                | expression_arth . MC_G expression_arth
   28                | expression_arth . MC_L expression_arth
   29                | expression_arth . MC_GE expression_arth
   30                | expression_arth . MC_LE expression_arth
   31                | expression_arth . MC_EQ expression_arth
   32                | expression_arth . MC_DI expression_arth
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    MC_G   shift, and go to state 75
    MC_L   shift, and go to state 76
    MC_GE  shift, and go to state 77
    MC_LE  shift, and go to state 78
    MC_EQ  shift, and go to state 79
    MC_DI  shift, and go to state 80
    PLUS   shift, and go to state 81
    MOIN   shift, and go to state 82
    MULT   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 26 (expression_comp)


state 96

   23 expression_log: expression_log . MC_AND expression_comp
   24               | expression_log . MC_OR expression_comp
   52 debut_if: MC_IF PAR_OUV expression_log . PAR_FER DEPOINT

    MC_AND   shift, and go to state 73
    MC_OR    shift, and go to state 74
    PAR_FER  shift, and go to state 120


state 97

   53 debut_for: MC_FOR PAR_OUV IDF . DEPOINT INT_CST DEPOINT INT_CST PAR_FER

    DEPOINT  shift, and go to state 121


state 98

   42 expression_arth: PAR_OUV expression_arth PAR_FER .

    $default  reduce using rule 42 (expression_arth)


state 99

   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth
   44 inst_aff: IDF AFF expression_arth . $@2 PVG

    PLUS  shift, and go to state 81
    MOIN  shift, and go to state 82
    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 43 ($@2)

    $@2  go to state 122


state 100

   23 expression_log: expression_log MC_AND expression_comp .

    $default  reduce using rule 23 (expression_log)


state 101

   24 expression_log: expression_log MC_OR expression_comp .

    $default  reduce using rule 24 (expression_log)


state 102

   27 expression_comp: expression_arth MC_G expression_arth .
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    PLUS  shift, and go to state 81
    MOIN  shift, and go to state 82
    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 27 (expression_comp)


state 103

   28 expression_comp: expression_arth MC_L expression_arth .
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    PLUS  shift, and go to state 81
    MOIN  shift, and go to state 82
    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 28 (expression_comp)


state 104

   29 expression_comp: expression_arth MC_GE expression_arth .
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    PLUS  shift, and go to state 81
    MOIN  shift, and go to state 82
    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 29 (expression_comp)


state 105

   30 expression_comp: expression_arth MC_LE expression_arth .
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    PLUS  shift, and go to state 81
    MOIN  shift, and go to state 82
    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 30 (expression_comp)


state 106

   31 expression_comp: expression_arth MC_EQ expression_arth .
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    PLUS  shift, and go to state 81
    MOIN  shift, and go to state 82
    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 31 (expression_comp)


state 107

   32 expression_comp: expression_arth MC_DI expression_arth .
   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    PLUS  shift, and go to state 81
    MOIN  shift, and go to state 82
    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 32 (expression_comp)


state 108

   38 expression_arth: expression_arth . PLUS expression_arth
   38                | expression_arth PLUS expression_arth .
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 38 (expression_arth)


state 109

   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   39                | expression_arth MOIN expression_arth .
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth

    MULT  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 39 (expression_arth)


state 110

   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   40                | expression_arth MULT expression_arth .
   41                | expression_arth . DIV expression_arth

    $default  reduce using rule 40 (expression_arth)


state 111

   38 expression_arth: expression_arth . PLUS expression_arth
   39                | expression_arth . MOIN expression_arth
   40                | expression_arth . MULT expression_arth
   41                | expression_arth . DIV expression_arth
   41                | expression_arth DIV expression_arth .

    $default  reduce using rule 41 (expression_arth)


state 112

   51 inst_if: debut_if list_code MC_END .

    $default  reduce using rule 51 (inst_if)


state 113

   50 inst_if: debut_if list_code MC_ELSE . DEPOINT $@5 list_code MC_END

    DEPOINT  shift, and go to state 123


state 114

   54 inst_for: debut_for list_code MC_END .

    $default  reduce using rule 54 (inst_for)


state 115

    1 S: IDF MC_DATA list_dec MC_END MC_CODE list_code MC_END MC_END .

    $default  reduce using rule 1 (S)


state 116

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST VRG . INT_CST DEPOINT type CRO_FER PVG

    INT_CST  shift, and go to state 124


state 117

   46 inst_read: MC_READ PAR_OUV STRING_CST DEPOINT . AROB IDF $@3 PAR_FER PVG

    AROB  shift, and go to state 125


state 118

   48 inst_display: MC_DISPLAY PAR_OUV STRING_CST DEPOINT . IDF $@4 PAR_FER PVG

    IDF  shift, and go to state 126


state 119

   25 expression_log: MC_NOT PAR_OUV expression_log PAR_FER .

    $default  reduce using rule 25 (expression_log)


state 120

   52 debut_if: MC_IF PAR_OUV expression_log PAR_FER . DEPOINT

    DEPOINT  shift, and go to state 127


state 121

   53 debut_for: MC_FOR PAR_OUV IDF DEPOINT . INT_CST DEPOINT INT_CST PAR_FER

    INT_CST  shift, and go to state 128


state 122

   44 inst_aff: IDF AFF expression_arth $@2 . PVG

    PVG  shift, and go to state 129


state 123

   50 inst_if: debut_if list_code MC_ELSE DEPOINT . $@5 list_code MC_END

    $default  reduce using rule 49 ($@5)

    $@5  go to state 130


state 124

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST VRG INT_CST . DEPOINT type CRO_FER PVG

    DEPOINT  shift, and go to state 131


state 125

   46 inst_read: MC_READ PAR_OUV STRING_CST DEPOINT AROB . IDF $@3 PAR_FER PVG

    IDF  shift, and go to state 132


state 126

   48 inst_display: MC_DISPLAY PAR_OUV STRING_CST DEPOINT IDF . $@4 PAR_FER PVG

    $default  reduce using rule 47 ($@4)

    $@4  go to state 133


state 127

   52 debut_if: MC_IF PAR_OUV expression_log PAR_FER DEPOINT .

    $default  reduce using rule 52 (debut_if)


state 128

   53 debut_for: MC_FOR PAR_OUV IDF DEPOINT INT_CST . DEPOINT INT_CST PAR_FER

    DEPOINT  shift, and go to state 134


state 129

   44 inst_aff: IDF AFF expression_arth $@2 PVG .

    $default  reduce using rule 44 (inst_aff)


state 130

   50 inst_if: debut_if list_code MC_ELSE DEPOINT $@5 . list_code MC_END

    MC_READ     shift, and go to state 30
    MC_DISPLAY  shift, and go to state 31
    MC_NOT      shift, and go to state 32
    MC_IF       shift, and go to state 33
    MC_FOR      shift, and go to state 34
    PAR_OUV     shift, and go to state 35
    INT_CST     shift, and go to state 36
    FLOAT_CST   shift, and go to state 37
    CHAR_CST    shift, and go to state 38
    STRING_CST  shift, and go to state 39
    IDF         shift, and go to state 40

    $default  reduce using rule 57 (code_items)

    expression       go to state 41
    expression_log   go to state 42
    expression_comp  go to state 43
    expression_arth  go to state 44
    inst_aff         go to state 45
    inst_read        go to state 46
    inst_display     go to state 47
    inst_if          go to state 48
    debut_if         go to state 49
    debut_for        go to state 50
    inst_for         go to state 51
    list_code        go to state 135
    code_items       go to state 53
    code_item        go to state 54
    inst_expr        go to state 55


state 131

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT . type CRO_FER PVG

    MC_INT    shift, and go to state 6
    MC_CHAR   shift, and go to state 7
    MC_STR    shift, and go to state 8
    MC_FLOAT  shift, and go to state 9

    type  go to state 136


state 132

   46 inst_read: MC_READ PAR_OUV STRING_CST DEPOINT AROB IDF . $@3 PAR_FER PVG

    $default  reduce using rule 45 ($@3)

    $@3  go to state 137


state 133

   48 inst_display: MC_DISPLAY PAR_OUV STRING_CST DEPOINT IDF $@4 . PAR_FER PVG

    PAR_FER  shift, and go to state 138


state 134

   53 debut_for: MC_FOR PAR_OUV IDF DEPOINT INT_CST DEPOINT . INT_CST PAR_FER

    INT_CST  shift, and go to state 139


state 135

   50 inst_if: debut_if list_code MC_ELSE DEPOINT $@5 list_code . MC_END

    MC_END  shift, and go to state 140


state 136

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT type . CRO_FER PVG

    CRO_FER  shift, and go to state 141


state 137

   46 inst_read: MC_READ PAR_OUV STRING_CST DEPOINT AROB IDF $@3 . PAR_FER PVG

    PAR_FER  shift, and go to state 142


state 138

   48 inst_display: MC_DISPLAY PAR_OUV STRING_CST DEPOINT IDF $@4 PAR_FER . PVG

    PVG  shift, and go to state 143


state 139

   53 debut_for: MC_FOR PAR_OUV IDF DEPOINT INT_CST DEPOINT INT_CST . PAR_FER

    PAR_FER  shift, and go to state 144


state 140

   50 inst_if: debut_if list_code MC_ELSE DEPOINT $@5 list_code MC_END .

    $default  reduce using rule 50 (inst_if)


state 141

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT type CRO_FER . PVG

    PVG  shift, and go to state 145


state 142

   46 inst_read: MC_READ PAR_OUV STRING_CST DEPOINT AROB IDF $@3 PAR_FER . PVG

    PVG  shift, and go to state 146


state 143

   48 inst_display: MC_DISPLAY PAR_OUV STRING_CST DEPOINT IDF $@4 PAR_FER PVG .

    $default  reduce using rule 48 (inst_display)


state 144

   53 debut_for: MC_FOR PAR_OUV IDF DEPOINT INT_CST DEPOINT INT_CST PAR_FER .

    $default  reduce using rule 53 (debut_for)


state 145

   19 dec_vec: MC_VECTOR DEPOINT IDF $@1 CRO_OUV INT_CST VRG INT_CST DEPOINT type CRO_FER PVG .

    $default  reduce using rule 19 (dec_vec)


state 146

   46 inst_read: MC_READ PAR_OUV STRING_CST DEPOINT AROB IDF $@3 PAR_FER PVG .

    $default  reduce using rule 46 (inst_read)
